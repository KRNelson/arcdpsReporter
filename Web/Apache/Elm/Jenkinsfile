pipeline {
    agent none
    stages {
        stage('Build') {
            agent {
                dockerfile {
                    filename 'Dockerfile'
                    dir './Web/Apache/Elm'
                    args '-u root --privileged'
                }
            }
            steps {
                sh 'cd ./Web/Apache/Elm && elm make ./src/Main.elm --optimize --output=main.js'
                sh 'uglifyjs --output main.min.js --compress --mangle -- ./Web/Apache/Elm/main.js'
                archiveArtifacts artifacts: 'main.min.js'
            }
        }
        stage('Deploy') {
            // agent {
            //     docker {image 'alpine/git:latest'}
            // }
            agent any
            steps {
                withCredentials([usernamePassword(credentialsId: '8e125cbe-0307-46f1-b94e-7f09e7ceacdd', passwordVariable:'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                    sh 'git status'
                    // sh 'git config --global user.email "jenkins@email.com"'
                    sh "git config --global user.name '$GIT_USERNAME'"
                    sh "git config --global user.password '$GIT_PASSWORD'"
                    sh 'git add main.min.js'
                    sh 'git commit -m "Jenkins Build"'
                    sh 'git push --set-upstream origin master'
                    // sh ("git tag -a some_tag2 -m 'Jenkins'")
                    // sh ("git push https://$GIT_USERNAME:$GIT_PASSWORD@arcdpsReporter --tags")
                }
            }
        }
    }
}